--CURSORES

--ATÉ O ÚLTIMO SCRIPT PARA FAZERMOS UM FOR
--OU UM LOOP E QUE O RESULTADO FOSSE O ESPERADO
--EXISTIA UMA PRÉ CONDIÇÃO DE QUE
--O ID (OU A VARIAVEL DE CONDIÇÃO ESCOLHIDA)
--ESTIVESSE EM SEQUENCIA, PORÉM NEM SEMPRE ISSO
--OCORRE, PARA ISSO EXISTEM OS CURSORES
--ELES PEGAM UM SELECT E GUARDAM EM MEMÓRIA 
--PODENDO ASSIM PERCORRER UMA TABELA IDEPENDENTE DE ID
--EM SEQUENCIA OU NÃO

SET SERVEROUTPUT ON;
DECLARE
	--COMO DECLARAR CURSOR
   CURSOR cur_CLIENTE IS SELECT ID, RAZAO_SOCIAL FROM CLIENTE;
   --CADA COLUNA DO CURSOR DEVE TER UMA VARIAVEL
   v_ID CLIENTE.ID%type;
   v_RAZAO_SOCIAL CLIENTE.RAZAO_SOCIAL%type;
BEGIN
	--SEMPRE QUE FORMOS USAR O CURSOR DEVEMOS ABRI-LO
   OPEN cur_CLIENTE;
   LOOP
	  --COMANDO QUE BUSCA A LINHA DO CURSOR
      FETCH cur_CLIENTE INTO v_ID, v_RAZAO_SOCIAL;
   --VERIFICANDO SE TEMOS PRÓXIMA LINHA	  
   EXIT WHEN cur_CLIENTE%NOTFOUND;
      dbms_output.put_line('ID = ' || v_ID);
      dbms_output.put_line('Razão Social = ' || v_RAZAO_SOCIAL);
   END LOOP;
   --APÓS O USO, DEVEMOS FECHAR O CURSOR
   CLOSE cur_CLIENTE;
END;